// source: home.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.yummies.HomeMoney', null, global);
goog.exportSymbol('proto.yummies.HomePopularNow', null, global);
goog.exportSymbol('proto.yummies.HomeRequest', null, global);
goog.exportSymbol('proto.yummies.HomeResponse', null, global);
goog.exportSymbol('proto.yummies.HomeTodaysSpecialOffer', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yummies.HomeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yummies.HomeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yummies.HomeRequest.displayName = 'proto.yummies.HomeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yummies.HomeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yummies.HomeResponse.repeatedFields_, null);
};
goog.inherits(proto.yummies.HomeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yummies.HomeResponse.displayName = 'proto.yummies.HomeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yummies.HomeTodaysSpecialOffer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yummies.HomeTodaysSpecialOffer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yummies.HomeTodaysSpecialOffer.displayName = 'proto.yummies.HomeTodaysSpecialOffer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yummies.HomePopularNow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yummies.HomePopularNow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yummies.HomePopularNow.displayName = 'proto.yummies.HomePopularNow';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yummies.HomeMoney = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yummies.HomeMoney, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yummies.HomeMoney.displayName = 'proto.yummies.HomeMoney';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yummies.HomeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yummies.HomeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yummies.HomeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yummies.HomeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customer: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yummies.HomeRequest}
 */
proto.yummies.HomeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yummies.HomeRequest;
  return proto.yummies.HomeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yummies.HomeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yummies.HomeRequest}
 */
proto.yummies.HomeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yummies.HomeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yummies.HomeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yummies.HomeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yummies.HomeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomer();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string customer = 1;
 * @return {string}
 */
proto.yummies.HomeRequest.prototype.getCustomer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yummies.HomeRequest} returns this
 */
proto.yummies.HomeRequest.prototype.setCustomer = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yummies.HomeResponse.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yummies.HomeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.yummies.HomeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yummies.HomeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yummies.HomeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoriesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    todaysSpecialOffer: (f = msg.getTodaysSpecialOffer()) && proto.yummies.HomeTodaysSpecialOffer.toObject(includeInstance, f),
    popularNowList: jspb.Message.toObjectList(msg.getPopularNowList(),
    proto.yummies.HomePopularNow.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yummies.HomeResponse}
 */
proto.yummies.HomeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yummies.HomeResponse;
  return proto.yummies.HomeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yummies.HomeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yummies.HomeResponse}
 */
proto.yummies.HomeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addCategories(value);
      break;
    case 2:
      var value = new proto.yummies.HomeTodaysSpecialOffer;
      reader.readMessage(value,proto.yummies.HomeTodaysSpecialOffer.deserializeBinaryFromReader);
      msg.setTodaysSpecialOffer(value);
      break;
    case 3:
      var value = new proto.yummies.HomePopularNow;
      reader.readMessage(value,proto.yummies.HomePopularNow.deserializeBinaryFromReader);
      msg.addPopularNow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yummies.HomeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yummies.HomeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yummies.HomeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yummies.HomeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getTodaysSpecialOffer();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.yummies.HomeTodaysSpecialOffer.serializeBinaryToWriter
    );
  }
  f = message.getPopularNowList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.yummies.HomePopularNow.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string categories = 1;
 * @return {!Array<string>}
 */
proto.yummies.HomeResponse.prototype.getCategoriesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.yummies.HomeResponse} returns this
 */
proto.yummies.HomeResponse.prototype.setCategoriesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.yummies.HomeResponse} returns this
 */
proto.yummies.HomeResponse.prototype.addCategories = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yummies.HomeResponse} returns this
 */
proto.yummies.HomeResponse.prototype.clearCategoriesList = function() {
  return this.setCategoriesList([]);
};


/**
 * optional HomeTodaysSpecialOffer todays_special_offer = 2;
 * @return {?proto.yummies.HomeTodaysSpecialOffer}
 */
proto.yummies.HomeResponse.prototype.getTodaysSpecialOffer = function() {
  return /** @type{?proto.yummies.HomeTodaysSpecialOffer} */ (
    jspb.Message.getWrapperField(this, proto.yummies.HomeTodaysSpecialOffer, 2));
};


/**
 * @param {?proto.yummies.HomeTodaysSpecialOffer|undefined} value
 * @return {!proto.yummies.HomeResponse} returns this
*/
proto.yummies.HomeResponse.prototype.setTodaysSpecialOffer = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yummies.HomeResponse} returns this
 */
proto.yummies.HomeResponse.prototype.clearTodaysSpecialOffer = function() {
  return this.setTodaysSpecialOffer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yummies.HomeResponse.prototype.hasTodaysSpecialOffer = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated HomePopularNow popular_now = 3;
 * @return {!Array<!proto.yummies.HomePopularNow>}
 */
proto.yummies.HomeResponse.prototype.getPopularNowList = function() {
  return /** @type{!Array<!proto.yummies.HomePopularNow>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.yummies.HomePopularNow, 3));
};


/**
 * @param {!Array<!proto.yummies.HomePopularNow>} value
 * @return {!proto.yummies.HomeResponse} returns this
*/
proto.yummies.HomeResponse.prototype.setPopularNowList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.yummies.HomePopularNow=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yummies.HomePopularNow}
 */
proto.yummies.HomeResponse.prototype.addPopularNow = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.yummies.HomePopularNow, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yummies.HomeResponse} returns this
 */
proto.yummies.HomeResponse.prototype.clearPopularNowList = function() {
  return this.setPopularNowList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yummies.HomeTodaysSpecialOffer.prototype.toObject = function(opt_includeInstance) {
  return proto.yummies.HomeTodaysSpecialOffer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yummies.HomeTodaysSpecialOffer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yummies.HomeTodaysSpecialOffer.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    img: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    price: (f = msg.getPrice()) && proto.yummies.HomeMoney.toObject(includeInstance, f),
    discount: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    priceDiscounted: (f = msg.getPriceDiscounted()) && proto.yummies.HomeMoney.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yummies.HomeTodaysSpecialOffer}
 */
proto.yummies.HomeTodaysSpecialOffer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yummies.HomeTodaysSpecialOffer;
  return proto.yummies.HomeTodaysSpecialOffer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yummies.HomeTodaysSpecialOffer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yummies.HomeTodaysSpecialOffer}
 */
proto.yummies.HomeTodaysSpecialOffer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setImg(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = new proto.yummies.HomeMoney;
      reader.readMessage(value,proto.yummies.HomeMoney.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDiscount(value);
      break;
    case 6:
      var value = new proto.yummies.HomeMoney;
      reader.readMessage(value,proto.yummies.HomeMoney.deserializeBinaryFromReader);
      msg.setPriceDiscounted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yummies.HomeTodaysSpecialOffer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yummies.HomeTodaysSpecialOffer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yummies.HomeTodaysSpecialOffer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yummies.HomeTodaysSpecialOffer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getImg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.yummies.HomeMoney.serializeBinaryToWriter
    );
  }
  f = message.getDiscount();
  if (f !== 0.0) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = message.getPriceDiscounted();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.yummies.HomeMoney.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.yummies.HomeTodaysSpecialOffer.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yummies.HomeTodaysSpecialOffer} returns this
 */
proto.yummies.HomeTodaysSpecialOffer.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string img = 2;
 * @return {string}
 */
proto.yummies.HomeTodaysSpecialOffer.prototype.getImg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yummies.HomeTodaysSpecialOffer} returns this
 */
proto.yummies.HomeTodaysSpecialOffer.prototype.setImg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.yummies.HomeTodaysSpecialOffer.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yummies.HomeTodaysSpecialOffer} returns this
 */
proto.yummies.HomeTodaysSpecialOffer.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional HomeMoney price = 4;
 * @return {?proto.yummies.HomeMoney}
 */
proto.yummies.HomeTodaysSpecialOffer.prototype.getPrice = function() {
  return /** @type{?proto.yummies.HomeMoney} */ (
    jspb.Message.getWrapperField(this, proto.yummies.HomeMoney, 4));
};


/**
 * @param {?proto.yummies.HomeMoney|undefined} value
 * @return {!proto.yummies.HomeTodaysSpecialOffer} returns this
*/
proto.yummies.HomeTodaysSpecialOffer.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yummies.HomeTodaysSpecialOffer} returns this
 */
proto.yummies.HomeTodaysSpecialOffer.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yummies.HomeTodaysSpecialOffer.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional float discount = 5;
 * @return {number}
 */
proto.yummies.HomeTodaysSpecialOffer.prototype.getDiscount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.yummies.HomeTodaysSpecialOffer} returns this
 */
proto.yummies.HomeTodaysSpecialOffer.prototype.setDiscount = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional HomeMoney price_discounted = 6;
 * @return {?proto.yummies.HomeMoney}
 */
proto.yummies.HomeTodaysSpecialOffer.prototype.getPriceDiscounted = function() {
  return /** @type{?proto.yummies.HomeMoney} */ (
    jspb.Message.getWrapperField(this, proto.yummies.HomeMoney, 6));
};


/**
 * @param {?proto.yummies.HomeMoney|undefined} value
 * @return {!proto.yummies.HomeTodaysSpecialOffer} returns this
*/
proto.yummies.HomeTodaysSpecialOffer.prototype.setPriceDiscounted = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yummies.HomeTodaysSpecialOffer} returns this
 */
proto.yummies.HomeTodaysSpecialOffer.prototype.clearPriceDiscounted = function() {
  return this.setPriceDiscounted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yummies.HomeTodaysSpecialOffer.prototype.hasPriceDiscounted = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yummies.HomePopularNow.prototype.toObject = function(opt_includeInstance) {
  return proto.yummies.HomePopularNow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yummies.HomePopularNow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yummies.HomePopularNow.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    img: jspb.Message.getFieldWithDefault(msg, 2, ""),
    price: (f = msg.getPrice()) && proto.yummies.HomeMoney.toObject(includeInstance, f),
    isFavorite: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yummies.HomePopularNow}
 */
proto.yummies.HomePopularNow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yummies.HomePopularNow;
  return proto.yummies.HomePopularNow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yummies.HomePopularNow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yummies.HomePopularNow}
 */
proto.yummies.HomePopularNow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setImg(value);
      break;
    case 3:
      var value = new proto.yummies.HomeMoney;
      reader.readMessage(value,proto.yummies.HomeMoney.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsFavorite(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yummies.HomePopularNow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yummies.HomePopularNow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yummies.HomePopularNow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yummies.HomePopularNow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getImg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.yummies.HomeMoney.serializeBinaryToWriter
    );
  }
  f = message.getIsFavorite();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.yummies.HomePopularNow.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yummies.HomePopularNow} returns this
 */
proto.yummies.HomePopularNow.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string img = 2;
 * @return {string}
 */
proto.yummies.HomePopularNow.prototype.getImg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.yummies.HomePopularNow} returns this
 */
proto.yummies.HomePopularNow.prototype.setImg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional HomeMoney price = 3;
 * @return {?proto.yummies.HomeMoney}
 */
proto.yummies.HomePopularNow.prototype.getPrice = function() {
  return /** @type{?proto.yummies.HomeMoney} */ (
    jspb.Message.getWrapperField(this, proto.yummies.HomeMoney, 3));
};


/**
 * @param {?proto.yummies.HomeMoney|undefined} value
 * @return {!proto.yummies.HomePopularNow} returns this
*/
proto.yummies.HomePopularNow.prototype.setPrice = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yummies.HomePopularNow} returns this
 */
proto.yummies.HomePopularNow.prototype.clearPrice = function() {
  return this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yummies.HomePopularNow.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool is_favorite = 4;
 * @return {boolean}
 */
proto.yummies.HomePopularNow.prototype.getIsFavorite = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.yummies.HomePopularNow} returns this
 */
proto.yummies.HomePopularNow.prototype.setIsFavorite = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yummies.HomeMoney.prototype.toObject = function(opt_includeInstance) {
  return proto.yummies.HomeMoney.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yummies.HomeMoney} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yummies.HomeMoney.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: jspb.Message.getFieldWithDefault(msg, 1, 0),
    decimals: jspb.Message.getFieldWithDefault(msg, 2, 0),
    currency: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yummies.HomeMoney}
 */
proto.yummies.HomeMoney.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yummies.HomeMoney;
  return proto.yummies.HomeMoney.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yummies.HomeMoney} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yummies.HomeMoney}
 */
proto.yummies.HomeMoney.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAmount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDecimals(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yummies.HomeMoney.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yummies.HomeMoney.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yummies.HomeMoney} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yummies.HomeMoney.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getDecimals();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getCurrency();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint64 amount = 1;
 * @return {number}
 */
proto.yummies.HomeMoney.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.yummies.HomeMoney} returns this
 */
proto.yummies.HomeMoney.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 decimals = 2;
 * @return {number}
 */
proto.yummies.HomeMoney.prototype.getDecimals = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.yummies.HomeMoney} returns this
 */
proto.yummies.HomeMoney.prototype.setDecimals = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string currency = 3;
 * @return {string}
 */
proto.yummies.HomeMoney.prototype.getCurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yummies.HomeMoney} returns this
 */
proto.yummies.HomeMoney.prototype.setCurrency = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.yummies);
